{"version":3,"file":"use-lazy.js","sources":["src/use-lazy/use-lazy.js"],"sourcesContent":["import { h, useEffect, useState } from \"../core/core\";\r\n\r\n/**\r\n * It allows to load a component asynchronously.\r\n * @param {Function} callback\r\n * @param {object} [props]\r\n */\r\nexport function useLazy(callback) {\r\n\tlet [view, setView] = useState(() => {\r\n\t\tlet ready;\r\n\t\tcallback().then(({ default: view }) => (ready = 1) && setView(view));\r\n\t\tfps(() => !ready && setView(({ loading }) => loading));\r\n\t\treturn \"\";\r\n\t});\r\n\treturn view;\r\n}\r\n\r\nfunction fps(callback, count = 3) {\r\n\tcount-- ? requestAnimationFrame(() => fps(callback, count)) : callback();\r\n}\r\n"],"names":[],"mappings":";;;AAEA;;;;;AAKA,AAAO,SAAS,OAAO,CAAC,QAAQ,EAAE;CACjC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM;EACpC,IAAI,KAAK,CAAC;EACV,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACrE,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC;EACvD,OAAO,EAAE,CAAC;EACV,CAAC,CAAC;CACH,OAAO,IAAI,CAAC;CACZ;;AAED,SAAS,GAAG,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE;CACjC,KAAK,EAAE,GAAG,qBAAqB,CAAC,MAAM,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC;CACzE;;;;"}