{"version":3,"file":"atomico.es5.umd.js","sources":["../src/constants.js","../src/utils.js","../src/vdom.js","../src/diff.js","../src/element.js"],"sourcesContent":["export const ELEMENT = \"Atomico\";\r\n\r\nexport const MOUNT = \"elementMount\";\r\n\r\nexport const UNMOUNT = \"elementUnmount\";\r\n\r\nexport const RECEIVE_PROPS = \"elementReceiveProps\";\r\n","export function getProps(props, element, data = {}) {\r\n    let dom = element instanceof HTMLElement;\r\n    for (let i = 0; i < props.length; i++) {\r\n        let prop = props[i],\r\n            value = dom ? element.getAttribute(prop) : element[prop];\r\n        if (dom && value === \"\") value = true;\r\n        data[prop.replace(/-+([\\w])/g, (all, letter) => letter.toUpperCase())] =\r\n            value === null ? undefined : value;\r\n    }\r\n    return data;\r\n}\r\n\r\nexport function root(parent) {\r\n    return parent.shadowRoot || parent;\r\n}\r\nexport function remove(parent, child) {\r\n    root(parent).removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    root(parent).appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    root(parent).replaceChild(newChild, oldChild);\r\n}\r\n","/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag, props, concat(children));\r\n}\r\n/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n */\r\nexport function VDom(tag, props, children) {\r\n    this.tag = tag;\r\n    this.props = props || {};\r\n    this.children = children || [];\r\n}\r\n\r\nexport function isDom(tag) {\r\n    return tag !== null && typeof tag === \"object\" && tag.nodeType !== 11\r\n        ? true\r\n        : false;\r\n}\r\n/**\r\n *\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isVDom(value) {\r\n    return typeof value === \"object\" && value instanceof VDom;\r\n}\r\n/**\r\n * prepares the children associated with virtual dom, managing to simplify the algorithm of diff\r\n * @param {*} children - list of children associated with the virtual dom\r\n * @param {*} merge - array that concatenates all the children independent of the depth of the array\r\n * @return {Array}\r\n */\r\nexport function concat(children, merge = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        Array.isArray(child)\r\n            ? concat(child, merge)\r\n            : merge.push(\r\n                  isVDom(child)\r\n                      ? child\r\n                      : isDom(child)\r\n                          ? new VDom(child, {}, \"\")\r\n                          : new VDom(\"\", {}, child || \"\")\r\n              );\r\n    }\r\n    return merge;\r\n}\r\n","import { RECEIVE_PROPS, ELEMENT } from \"./constants\";\r\n\r\nimport { remove, append, replace, root } from \"./utils\";\r\nimport { VDom, h, isDom } from \"./vdom\";\r\n/**\r\n * compares the attributes associated with the 2 render states\r\n * @param {HTMLELement} node\r\n * @param {Object} prev - properties that the node already has\r\n * @param {Object} next - object with the new properties to define the node\r\n * @param {Boolean} [svg] - define if the html element is a svg\r\n * @param {Object} [props] - allows to define if the instance belongs to a component, if so it\r\n *                         will rescue the properties associated to the method `static get props`\r\n *                         through this variable, manages to transfer mutations and new children\r\n *                         associated with it to the component.\r\n */\r\nexport function diffProps(node, prev, next, svg, props) {\r\n    // generates a list of the existing attributes in both versions\r\n    let keys = Object.keys(prev).concat(Object.keys(next));\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n        if (prev[prop] !== next[prop]) {\r\n            /**\r\n             * Since prop is defined, Atomico will proceed only to take the attributes\r\n             * defined for the component, the undefined ones continue the normal process\r\n             */\r\n            if (props && node._props.indexOf(prop) > -1) {\r\n                props[prop] = next[prop];\r\n                continue;\r\n            }\r\n            if (\r\n                typeof next[prop] === \"function\" ||\r\n                typeof prev[prop] === \"function\"\r\n            ) {\r\n                if (prev[prop]) node.removeEventListener(prop, prev[prop]);\r\n                node.addEventListener(prop, next[prop]);\r\n            } else if (prop in next) {\r\n                if ((prop in node && !svg) || (svg && prop === \"style\")) {\r\n                    if (prop === \"style\") {\r\n                        if (typeof next[prop] === \"object\") {\r\n                            for (let index in next[prop]) {\r\n                                node.style[index] = next[prop][index];\r\n                            }\r\n                        } else {\r\n                            node.style.cssText = next[prop];\r\n                        }\r\n                    } else {\r\n                        node[prop] = next[prop];\r\n                    }\r\n                } else {\r\n                    if (svg && prop === \"xmlns\") continue;\r\n                    svg\r\n                        ? node.setAttributeNS(null, prop, next[prop])\r\n                        : node.setAttribute(prop, next[prop]);\r\n                }\r\n            } else {\r\n                node.removeAttribute(prop);\r\n            }\r\n        }\r\n    }\r\n    if (props) node.dispatch(RECEIVE_PROPS, props);\r\n}\r\n\r\nfunction slot(vdom, root) {\r\n    if (vdom.tag === \"slot\") {\r\n        vdom.tag = root.slots[vdom.props.name] || \"\";\r\n    }\r\n    return vdom;\r\n}\r\n/**\r\n * It allows to compare the 2 states of the render\r\n * @param {HTMLELement} node - will receive the changes that the diff process determines\r\n * @param {Array} master - Previous state of the render\r\n * @param {Array} commit - Next render state\r\n * @param {Boolean} svg - define if the html element is a svg\r\n */\r\nexport function diff(node, master, commit, root = node, svg) {\r\n    let children = node.childNodes || [],\r\n        length = Math.max(master.length, commit.length);\r\n    for (let i = 0; i < length; i++) {\r\n        let prev = master[i] || new VDom(),\r\n            next = commit[i],\r\n            child = children[i];\r\n\r\n        if (next) {\r\n            next = slot(next, root);\r\n            prev = slot(prev, root);\r\n\r\n            let cursor = child,\r\n                // Allows the use of real nodes\r\n                dom = isDom(next.tag);\r\n            svg = svg || next.tag === \"svg\";\r\n            if (prev.tag !== next.tag) {\r\n                if (dom) {\r\n                    cursor = next.tag;\r\n                    child ? replace(node, cursor, child) : append(node, cursor);\r\n                } else if (next.tag) {\r\n                    cursor = svg\r\n                        ? document.createElementNS(\r\n                              \"http://www.w3.org/2000/svg\",\r\n                              next.tag\r\n                          )\r\n                        : document.createElement(next.tag);\r\n                    if (child) {\r\n                        replace(node, cursor, child);\r\n                        // Avoid the merge if the child is a component\r\n                        if (!cursor[ELEMENT]) {\r\n                            while (child.firstChild) {\r\n                                append(cursor, child.firstChild);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        append(node, cursor);\r\n                    }\r\n                } else {\r\n                    cursor = document.createTextNode(\"\");\r\n                    if (prev.tag) {\r\n                        replace(node, cursor, child);\r\n                    } else {\r\n                        append(node, cursor);\r\n                    }\r\n                }\r\n            }\r\n            if (!dom && cursor.nodeName === \"#text\") {\r\n                if (prev.children !== next.children)\r\n                    cursor.textContent = next.children;\r\n            } else {\r\n                diffProps(\r\n                    cursor,\r\n                    prev.props,\r\n                    next.props,\r\n                    svg,\r\n                    // of being an Atomico component, the object is created to transmit the mutations\r\n                    cursor[ELEMENT] && {\r\n                        children: next.children.map(\r\n                            vdom => (vdom.tag ? vdom : vdom.children)\r\n                        )\r\n                    }\r\n                );\r\n                if (!dom && cursor && !cursor[ELEMENT]) {\r\n                    diff(cursor, prev.children, next.children, root, svg);\r\n                }\r\n            }\r\n        } else {\r\n            if (child) remove(node, child);\r\n        }\r\n    }\r\n}\r\n","import { MOUNT, UNMOUNT, RECEIVE_PROPS, ELEMENT } from \"./constants\";\r\n\r\nimport { diff } from \"./diff\";\r\nimport { concat } from \"./vdom\";\r\nimport { getProps, root, append } from \"./utils\";\r\n\r\nexport default class extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this[ELEMENT] = true;\r\n        this.state = {};\r\n        this.slots = {};\r\n        this.props = {};\r\n        this.fixProps = {};\r\n        this.fragment = document.createDocumentFragment();\r\n        this._props = this.constructor.props || [];\r\n        this._render = [];\r\n        this._mount;\r\n        this.livecycle();\r\n    }\r\n    static get observedAttributes() {\r\n        return this.props || [];\r\n    }\r\n    livecycle() {\r\n        this.listeners = [MOUNT, UNMOUNT, RECEIVE_PROPS].map(type => {\r\n            let handler = event => {\r\n                if (!this._mount) return;\r\n\r\n                if (this[type]) this[type](event);\r\n\r\n                if (event.defaultPrevented) return;\r\n\r\n                if (type === RECEIVE_PROPS) {\r\n                    this.props = getProps(\r\n                        Object.keys(event.detail),\r\n                        event.detail,\r\n                        { ...this.props }\r\n                    );\r\n                }\r\n                this.setState({});\r\n            };\r\n            this.addEventListener(type, handler);\r\n            return () => this.removeEventListener(type, handler);\r\n        });\r\n    }\r\n    setAttribute(prop, value) {\r\n        if (this._props.indexOf(prop) > -1) {\r\n            if (this._mount) {\r\n                this.attributeChangedCallback(prop, this.props[prop], value);\r\n            } else {\r\n                getProps([prop], { [prop]: value }, this.fixProps);\r\n            }\r\n        } else {\r\n            super.setAttribute(prop, value);\r\n        }\r\n    }\r\n    /**\r\n     * By default the children and properties are extracted\r\n     * only when the component exists in the document\r\n     * This is required for the component to be read regardless\r\n     * of the load instance\r\n     */\r\n    connectedCallback() {\r\n        this._mount = true;\r\n        this.props = { ...getProps(this._props, this), ...this.fixProps };\r\n        this.props.children = [];\r\n        while (this.firstChild) {\r\n            let child = this.firstChild,\r\n                slot = child.getAttribute && child.getAttribute(\"slot\");\r\n            if (slot) {\r\n                this.slots[slot] = child;\r\n            }\r\n            append(this.fragment, child);\r\n            this.props.children.push(child);\r\n        }\r\n        this.dispatch(MOUNT);\r\n    }\r\n    disconnectedCallback() {\r\n        this.dispatch(UNMOUNT);\r\n        this.listeners.forEach(handler => handler());\r\n    }\r\n    attributeChangedCallback(index, prev, next) {\r\n        if (prev === next) return;\r\n        this.dispatch(RECEIVE_PROPS, getProps([index], { [index]: next }));\r\n    }\r\n    dispatch(type, detail) {\r\n        this.dispatchEvent(\r\n            new CustomEvent(type, {\r\n                cancelable: true,\r\n                detail\r\n            })\r\n        );\r\n    }\r\n    setState(next) {\r\n        if (!next) return;\r\n        this.state = { ...this.state, ...next };\r\n        let render = concat([this.render()]);\r\n        diff(root(this), this._render, render);\r\n        this._render = render;\r\n    }\r\n    render() {}\r\n}\r\n"],"names":["const","ELEMENT","MOUNT","UNMOUNT","RECEIVE_PROPS","getProps","props","element","data","let","dom","HTMLElement","i","length","prop","value","getAttribute","replace","all","letter","toUpperCase","undefined","root","parent","shadowRoot","remove","child","removeChild","append","appendChild","newChild","oldChild","replaceChild","VDom","tag","children","this","isDom","nodeType","concat","merge","Array","isArray","push","diffProps","node","prev","next","svg","keys","Object","_props","indexOf","removeEventListener","addEventListener","index","style","cssText","setAttributeNS","setAttribute","removeAttribute","dispatch","slot","vdom","slots","name","super","state","fixProps","fragment","document","createDocumentFragment","constructor","_render","_mount","livecycle","staticAccessors","observedAttributes","listeners","map","type","handler","event","defaultPrevented","detail","setState","attributeChangedCallback","connectedCallback","firstChild","disconnectedCallback","forEach","dispatchEvent","CustomEvent","cancelable","render","diff","master","commit","childNodes","Math","max","cursor","createElementNS","createElement","createTextNode","nodeName","textContent"],"mappings":"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"}