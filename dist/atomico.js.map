{"version":3,"file":"atomico.js","sources":["../src/constants.js","../src/utils.js","../src/vdom.js","../src/diff.js","../src/element.js"],"sourcesContent":["export const ELEMENT = \"Atomico\";\r\n","export function camelCase(string) {\r\n    return string.replace(/-+([\\w])/g, (all, letter) => letter.toUpperCase());\r\n}\r\n\r\nexport function defer(handler) {\r\n    return requestAnimationFrame(handler);\r\n}\r\n\r\nexport function root(parent) {\r\n    return parent.shadowRoot || parent;\r\n}\r\nexport function remove(parent, child) {\r\n    root(parent).removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    root(parent).appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    root(parent).replaceChild(newChild, oldChild);\r\n}\r\n\r\nexport function merge(base, props) {\r\n    let next = {},\r\n        change = [];\r\n    for (let prop in props) {\r\n        let index = camelCase(prop);\r\n        if ((next[index] = props[prop]) !== base[index]) change.push(index);\r\n    }\r\n    return {\r\n        next,\r\n        change\r\n    };\r\n}\r\n","/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag, props, concat(children));\r\n}\r\n/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n */\r\nexport function VDom(tag, props, children) {\r\n    this.tag = tag;\r\n    this.props = props || {};\r\n    this.children = children || [];\r\n}\r\n\r\nexport function isDom(tag) {\r\n    return tag !== null && typeof tag === \"object\" && tag.nodeType !== 11\r\n        ? true\r\n        : false;\r\n}\r\n/**\r\n *\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isVDom(value) {\r\n    return typeof value === \"object\" && value instanceof VDom;\r\n}\r\n/**\r\n * prepares the children associated with virtual dom, managing to simplify the algorithm of diff\r\n * @param {*} children - list of children associated with the virtual dom\r\n * @param {*} merge - array that concatenates all the children independent of the depth of the array\r\n * @return {Array}\r\n */\r\nexport function concat(children, merge = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        Array.isArray(child)\r\n            ? concat(child, merge)\r\n            : merge.push(\r\n                  isVDom(child)\r\n                      ? child\r\n                      : isDom(child)\r\n                          ? new VDom(child, {}, \"\")\r\n                          : new VDom(\"\", {}, child || \"\")\r\n              );\r\n    }\r\n    return merge;\r\n}\r\n","import { ELEMENT } from \"./constants\";\r\n\r\nimport { remove, append, replace, root } from \"./utils\";\r\nimport { VDom, h, isDom } from \"./vdom\";\r\n/**\r\n * compares the attributes associated with the 2 render states\r\n * @param {HTMLELement} node\r\n * @param {Object} prev - properties that the node already has\r\n * @param {Object} next - object with the new properties to define the node\r\n * @param {Boolean} [svg] - define if the html element is a svg\r\n * @param {Object} [props] - allows to define if the instance belongs to a component, if so it\r\n *                         will rescue the properties associated to the method `static get props`\r\n *                         through this variable, manages to transfer mutations and new children\r\n *                         associated with it to the component.\r\n */\r\nexport function diffProps(node, prev, next, svg, props) {\r\n    // generates a list of the existing attributes in both versions\r\n    let keys = Object.keys(prev).concat(Object.keys(next));\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n        if (prev[prop] !== next[prop]) {\r\n            /**\r\n             * Since prop is defined, Atomico will proceed only to take the attributes\r\n             * defined for the component, the undefined ones continue the normal process\r\n             */\r\n            if (props && node._props.indexOf(prop) > -1) {\r\n                props[prop] = next[prop];\r\n                continue;\r\n            }\r\n            if (\r\n                typeof next[prop] === \"function\" ||\r\n                typeof prev[prop] === \"function\"\r\n            ) {\r\n                if (prev[prop]) node.removeEventListener(prop, prev[prop]);\r\n                node.addEventListener(prop, next[prop]);\r\n            } else if (prop in next) {\r\n                if ((prop in node && !svg) || (svg && prop === \"style\")) {\r\n                    if (prop === \"style\") {\r\n                        if (typeof next[prop] === \"object\") {\r\n                            for (let index in next[prop]) {\r\n                                node.style[index] = next[prop][index];\r\n                            }\r\n                        } else {\r\n                            node.style.cssText = next[prop];\r\n                        }\r\n                    } else {\r\n                        node[prop] = next[prop];\r\n                    }\r\n                } else {\r\n                    if (svg && prop === \"xmlns\") continue;\r\n                    svg\r\n                        ? node.setAttributeNS(null, prop, next[prop])\r\n                        : node.setAttribute(prop, next[prop]);\r\n                }\r\n            } else {\r\n                node.removeAttribute(prop);\r\n            }\r\n        }\r\n    }\r\n    if (props) node.setProps(props);\r\n}\r\n\r\nfunction slot(vdom, root) {\r\n    if (vdom.tag === \"slot\") {\r\n        vdom.tag = root.slots[vdom.props.name] || \"\";\r\n    }\r\n    return vdom;\r\n}\r\n/**\r\n * It allows to compare the 2 states of the render\r\n * @param {HTMLELement} node - will receive the changes that the diff process determines\r\n * @param {Array} master - Previous state of the render\r\n * @param {Array} commit - Next render state\r\n * @param {Boolean} svg - define if the html element is a svg\r\n */\r\nexport function diff(node, master, commit, root = node, svg) {\r\n    let children = node.childNodes || [],\r\n        length = Math.max(master.length, commit.length);\r\n    for (let i = 0; i < length; i++) {\r\n        let prev = master[i] || new VDom(),\r\n            next = commit[i],\r\n            child = children[i];\r\n\r\n        if (next) {\r\n            next = slot(next, root);\r\n            prev = slot(prev, root);\r\n\r\n            let cursor = child,\r\n                // Allows the use of real nodes\r\n                dom = isDom(next.tag);\r\n            svg = svg || next.tag === \"svg\";\r\n            if (prev.tag !== next.tag) {\r\n                if (dom) {\r\n                    cursor = next.tag;\r\n                    child ? replace(node, cursor, child) : append(node, cursor);\r\n                } else if (next.tag) {\r\n                    cursor = svg\r\n                        ? document.createElementNS(\r\n                              \"http://www.w3.org/2000/svg\",\r\n                              next.tag\r\n                          )\r\n                        : document.createElement(next.tag);\r\n                    if (child) {\r\n                        replace(node, cursor, child);\r\n                        // Avoid the merge if the child is a component\r\n                        if (!cursor[ELEMENT]) {\r\n                            while (child.firstChild) {\r\n                                append(cursor, child.firstChild);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        append(node, cursor);\r\n                    }\r\n                } else {\r\n                    cursor = document.createTextNode(\"\");\r\n                    if (prev.tag) {\r\n                        replace(node, cursor, child);\r\n                    } else {\r\n                        append(node, cursor);\r\n                    }\r\n                }\r\n            }\r\n            if (!dom && cursor.nodeName === \"#text\") {\r\n                if (prev.children !== next.children)\r\n                    cursor.textContent = next.children;\r\n            } else {\r\n                diffProps(\r\n                    cursor,\r\n                    prev.props,\r\n                    next.props,\r\n                    svg,\r\n                    // of being an Atomico component, the object is created to transmit the mutations\r\n                    cursor[ELEMENT] && {\r\n                        children: next.children.map(\r\n                            vdom => (vdom.tag ? vdom : vdom.children)\r\n                        )\r\n                    }\r\n                );\r\n                if (!dom && cursor && !cursor[ELEMENT]) {\r\n                    diff(cursor, prev.children, next.children, root, svg);\r\n                }\r\n            }\r\n        } else {\r\n            if (child) remove(node, child);\r\n        }\r\n    }\r\n}\r\n","import { ELEMENT } from \"./constants\";\r\n\r\nimport { diff } from \"./diff\";\r\nimport { concat } from \"./vdom\";\r\nimport { camelCase, root, append, defer } from \"./utils\";\r\n\r\nexport default class extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this[ELEMENT] = true;\r\n        this.state = {};\r\n        this.slots = {};\r\n        this.props = {};\r\n        this.fragment = document.createDocumentFragment();\r\n        this._props = this.constructor.props || [];\r\n        this._render = [];\r\n        this._mount;\r\n        this._prevent;\r\n    }\r\n    static get observedAttributes() {\r\n        return [\"children\"].concat(this.props || []);\r\n    }\r\n    setAttribute(prop, value) {\r\n        if (this._props.indexOf(prop) > -1) {\r\n            this.setProps({ ...this.props, [prop]: value });\r\n        } else {\r\n            super.setAttribute(prop, value);\r\n        }\r\n    }\r\n    /**\r\n     * By default the children and properties are extracted\r\n     * only when the component exists in the document\r\n     * This is required for the component to be read regardless\r\n     * of the load instance, in the same way it is applied asynchronously,\r\n     * so as to be able to read the arguments generated by synchronous invocation,\r\n     * be it the use of document.createElement\r\n     */\r\n    connectedCallback() {\r\n        defer(() => {\r\n            let children = this.props.children || [];\r\n            while (this.firstChild) {\r\n                let child = this.firstChild,\r\n                    slot = child.getAttribute && child.getAttribute(\"slot\");\r\n                if (slot) {\r\n                    this.slots[slot] = child;\r\n                }\r\n                append(this.fragment, child);\r\n                children.push(child);\r\n            }\r\n            this.setProps({ ...this.props, children });\r\n            this.setState({}, (this._mount = true));\r\n            this.elementMount();\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        this.elementUnmount();\r\n    }\r\n    setProps(props) {\r\n        let nextProps = {},\r\n            prevent = this._mount,\r\n            change = [];\r\n        for (let prop in props) {\r\n            let index = camelCase(prop);\r\n            if ((nextProps[index] = props[prop]) !== this.props[index])\r\n                change.push(index);\r\n        }\r\n        if (change.length) {\r\n            if (prevent) prevent = this.elementReceiveProps(nextProps, change);\r\n            this.props = nextProps;\r\n            if (prevent !== false && this._mount) this.setState({});\r\n        }\r\n    }\r\n    attributeChangedCallback(index, prev, next) {\r\n        prev !== next && this.setProps({ ...this.props, [index]: next });\r\n    }\r\n    dispatch(type, detail) {\r\n        this.dispatchEvent(\r\n            new CustomEvent(type, {\r\n                cancelable: true,\r\n                detail\r\n            })\r\n        );\r\n    }\r\n    setState(next, ignoreUpdate) {\r\n        if (!next) return;\r\n        this.state = { ...this.state, ...next };\r\n        if (this._prevent) return;\r\n        this._prevent = true;\r\n        defer(() => {\r\n            let render = concat([this.render()]);\r\n            diff(root(this), this._render, render);\r\n            this._render = render;\r\n            this._prevent = false;\r\n            if (!ignoreUpdate) this.elementUpdate(UPDATE);\r\n        });\r\n    }\r\n    elementMount() {}\r\n    elementUpdate() {}\r\n    elementUnmount() {}\r\n    elementReceiveProps() {}\r\n    render() {}\r\n}\r\n"],"names":["const","ELEMENT","camelCase","string","replace","all","letter","toUpperCase","defer","handler","requestAnimationFrame","root","parent","shadowRoot","remove","child","removeChild","append","appendChild","newChild","oldChild","replaceChild","h","tag","props","VDom","concat","children","this","isDom","nodeType","isVDom","value","merge","let","i","length","Array","isArray","push","diffProps","node","prev","next","svg","keys","Object","prop","_props","indexOf","removeEventListener","addEventListener","index","style","cssText","setAttributeNS","setAttribute","removeAttribute","setProps","slot","vdom","slots","name","diff","master","commit","childNodes","Math","max","cursor","dom","document","createElementNS","createElement","firstChild","createTextNode","nodeName","map","textContent","HTMLElement","[object Object]","super","state","fragment","createDocumentFragment","constructor","_render","_mount","_prevent","observedAttributes","getAttribute","setState","elementMount","elementUnmount","nextProps","prevent","change","elementReceiveProps","type","detail","dispatchEvent","CustomEvent","cancelable","ignoreUpdate","render","elementUpdate","UPDATE"],"mappings":"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"}