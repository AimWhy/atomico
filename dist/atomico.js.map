{"version":3,"file":"atomico.js","sources":["../src/utils.js","../src/vdom/dom.js","../src/vdom/vdom.js","../src/vdom/diff.js","../src/component.js"],"sourcesContent":["export function getMethods(proto) {\r\n    let keys = [];\r\n    do {\r\n        keys = keys.concat(Object.getOwnPropertyNames(proto));\r\n    } while ((proto = Object.getPrototypeOf(proto)));\r\n    return keys;\r\n}\r\n\r\nexport function getEvents(Root) {\r\n    let regExp = /^on([A-Z])/,\r\n        methods = getMethods(Root.prototype),\r\n        events = [];\r\n    for (let i = 0; i < methods.length; i++) {\r\n        let method = methods[i];\r\n        if (methods.indexOf(method) === i && regExp.test(method)) {\r\n            events.push({\r\n                method,\r\n                type: method.replace(regExp, (all, letter) =>\r\n                    letter.toLowerCase()\r\n                )\r\n            });\r\n        }\r\n    }\r\n    return events;\r\n}\r\n\r\nexport function getProps(props, element) {\r\n    let data = {};\r\n    for (let i = 0; i < props.length; i++) {\r\n        let prop = props[i],\r\n            value =\r\n                element instanceof HTMLElement\r\n                    ? element.getAttribute(prop)\r\n                    : element[prop];\r\n        data[\r\n            prop.replace(/-+([\\w])/g, (all, letter) => letter.toUpperCase())\r\n        ] = /^json-/.test(prop) ? JSON.parse(value) : value;\r\n    }\r\n    return data;\r\n}\r\n","export function remove(parent, child) {\r\n    parent.removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    parent.appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    parent.replaceChild(newChild, oldChild);\r\n}\r\n\r\nexport function createText() {\r\n    return document.createTextNode(\"\");\r\n}\r\n\r\nexport function createElement(tag, svg) {\r\n    return svg\r\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        : document.createElement(tag);\r\n}\r\n","/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag, props, concat(children));\r\n}\r\n/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n */\r\nexport function VDom(tag, props, children) {\r\n    this.tag = tag;\r\n    this.props = props || {};\r\n    this.children = children || [];\r\n}\r\n/**\r\n *\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isVDom(value) {\r\n    return typeof value === \"object\" && value instanceof VDom;\r\n}\r\n/**\r\n * prepares the children associated with virtual dom, managing to simplify the algorithm of diff\r\n * @param {*} children - list of children associated with the virtual dom\r\n * @param {*} merge - array that concatenates all the children independent of the depth of the array\r\n * @return {Array}\r\n */\r\nexport function concat(children, merge = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        Array.isArray(child)\r\n            ? concat(child, merge)\r\n            : merge.push(isVDom(child) ? child : new VDom(\"\", {}, child || \"\"));\r\n    }\r\n    return merge;\r\n}\r\n","import { remove, append, replace, createText, createElement } from \"./dom\";\r\nimport { VDom, h } from \"./vdom\";\r\n/**\r\n * compares the attributes associated with the 2 render states\r\n * @param {HTMLELement} node\r\n * @param {Object} prev\r\n * @param {Object} next\r\n * @param {Boolean} svg\r\n */\r\nexport function diffProps(node, prev, next, svg) {\r\n    // generates a list of the existing attributes in both versions\r\n    let keys = Object.keys(prev).concat(Object.keys(next));\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n        if (prev[prop] !== next[prop]) {\r\n            if (\r\n                typeof next[prop] === \"function\" ||\r\n                typeof prev[prop] === \"function\"\r\n            ) {\r\n                node[props.toLowerCase()] = next[prop] || null;\r\n            } else if (prop in next) {\r\n                if ((prop in node && !svg) || (svg && prop === \"style\")) {\r\n                    if (prop === \"style\") {\r\n                        if (typeof next[prop] === \"object\") {\r\n                            for (let index in next[prop]) {\r\n                                node.style[index] = next[prop][index];\r\n                            }\r\n                        } else {\r\n                            node.style.cssText = next[prop];\r\n                        }\r\n                    } else {\r\n                        node[prop] = next[prop];\r\n                    }\r\n                } else {\r\n                    svg\r\n                        ? node.setAttributeNS(null, prop, next[prop])\r\n                        : node.setAttribute(prop, next[prop]);\r\n                }\r\n            } else {\r\n                node.removeAttribute(prop);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * It allows to compare the 2 states of the render\r\n * @param {HTMLELement} parent - will receive the changes that the diff process determines\r\n * @param {Array} master - Previous state of the render\r\n * @param {Array} commit - Next render state\r\n * @param {Boolean} svg\r\n */\r\nexport function diff(parent, master, commit, svg) {\r\n    let children = parent.childNodes || [],\r\n        length = Math.max(master.length, commit.length);\r\n    for (let i = 0; i < length; i++) {\r\n        let prev = master[i] || new VDom(),\r\n            next = commit[i],\r\n            node = children[i];\r\n\r\n        if (next) {\r\n            let cursor = node;\r\n            svg = svg || next.tag === \"svg\";\r\n            if (prev.tag !== next.tag) {\r\n                if (next.tag) {\r\n                    cursor = createElement(next.tag, svg);\r\n                    if (node) {\r\n                        replace(parent, cursor, node);\r\n                        while (node.firstChild) {\r\n                            cursor.appendChild(node.firstChild);\r\n                        }\r\n                    } else {\r\n                        append(parent, cursor);\r\n                    }\r\n                } else {\r\n                    cursor = createText();\r\n                    if (prev.tag) {\r\n                        replace(parent, cursor, node);\r\n                    } else {\r\n                        append(parent, cursor);\r\n                    }\r\n                }\r\n            }\r\n            if (cursor.nodeName === \"#text\") {\r\n                if (prev.children !== next.children)\r\n                    cursor.textContent = next.children;\r\n            } else {\r\n                diffProps(cursor, prev.props, next.props, svg);\r\n                if (cursor) {\r\n                    diff(cursor, prev.children, next.children, svg);\r\n                }\r\n            }\r\n        } else {\r\n            if (node) remove(parent, node);\r\n        }\r\n    }\r\n}\r\n","import { getMethods, getEvents, getProps } from \"./utils\";\r\nimport { diff } from \"./vdom/diff\";\r\nimport { concat, h } from \"./vdom/vdom\";\r\n\r\nexport class Component {\r\n    constructor(root) {\r\n        this.root = root;\r\n        this.props = {};\r\n        this.state = {};\r\n        let _prev = [];\r\n        this.setState = (state = {}) => {\r\n            this.state = { ...this.state, ...state };\r\n            let render = concat([this.render()]);\r\n            diff(this.root, _prev, render);\r\n            _prev = render;\r\n        };\r\n    }\r\n    onMount() {}\r\n    onUpdate() {}\r\n    onUnmount() {}\r\n    onRender(event) {\r\n        this.setState();\r\n    }\r\n    render() {}\r\n}\r\n\r\nexport function register(tagName, Root) {\r\n    let _props = Root.props || [],\r\n        _events = getEvents(Root);\r\n    customElements.define(\r\n        tagName,\r\n        class extends HTMLElement {\r\n            constructor() {\r\n                super();\r\n                this.autorun();\r\n                this.root = new Root(this);\r\n            }\r\n            static get observedAttributes() {\r\n                return _props;\r\n            }\r\n            autorun() {\r\n                _events.forEach(({ type, method }) => {\r\n                    this.addEventListener(\r\n                        type,\r\n                        event => {\r\n                            this.root[method](event);\r\n                            if (event.defaultPrevented) return;\r\n                            if (type === \"update\") {\r\n                                this.root.props = {\r\n                                    ...this.root.props,\r\n                                    ...event.detail\r\n                                };\r\n                            }\r\n                            if (!/^(render|unmount)$/.test(type))\r\n                                this.dispatch(\"render\");\r\n                        },\r\n                        true\r\n                    );\r\n                });\r\n            }\r\n            connectedCallback() {\r\n                this.dispatch(\"mount\");\r\n            }\r\n            disconnectedCallback() {\r\n                this.dispatch(\"unmount\");\r\n            }\r\n            attributeChangedCallback(index, prev, next) {\r\n                this.dispatch(\"update\", getProps(_props, { [index]: next }));\r\n            }\r\n            dispatch(type, detail) {\r\n                this.dispatchEvent(\r\n                    new CustomEvent(type, {\r\n                        cancelable: true,\r\n                        detail\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    );\r\n}\r\n"],"names":["getMethods","proto","let","keys","concat","Object","getOwnPropertyNames","getPrototypeOf","getEvents","Root","regExp","methods","prototype","events","i","length","method","indexOf","test","push","type","replace","all","letter","toLowerCase","getProps","props","element","data","prop","value","HTMLElement","getAttribute","toUpperCase","JSON","parse","remove","parent","child","removeChild","append","appendChild","newChild","oldChild","replaceChild","createText","document","createTextNode","createElement","tag","svg","createElementNS","h","VDom","children","this","isVDom","merge","Array","isArray","diffProps","node","prev","next","index","style","cssText","setAttributeNS","setAttribute","removeAttribute","diff","master","commit","childNodes","Math","max","cursor","firstChild","nodeName","textContent","Component","[object Object]","root","state","_prev","setState","render","event","register","tagName","_props","_events","customElements","define","super","autorun","observedAttributes","forEach","ref","addEventListener","defaultPrevented","detail","dispatch","dispatchEvent","CustomEvent","cancelable"],"mappings":"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"}