{"version":3,"file":"atomico.umd.js","sources":["../src/utils.js","../src/vdom/dom.js","../src/vdom/vdom.js","../src/vdom/diff.js","../src/component.js"],"sourcesContent":["export function getMethods(proto) {\r\n    let keys = [];\r\n    do {\r\n        keys = keys.concat(Object.getOwnPropertyNames(proto));\r\n    } while ((proto = Object.getPrototypeOf(proto)));\r\n    return keys;\r\n}\r\n\r\nexport function getEvents(Root) {\r\n    let regExp = /^on([A-Z])/,\r\n        methods = getMethods(Root.prototype),\r\n        events = [];\r\n    for (let i = 0; i < methods.length; i++) {\r\n        let method = methods[i];\r\n        if (methods.indexOf(method) === i && regExp.test(method)) {\r\n            events.push({\r\n                method,\r\n                type: method.replace(regExp, (all, letter) =>\r\n                    letter.toLowerCase()\r\n                )\r\n            });\r\n        }\r\n    }\r\n    return events;\r\n}\r\n\r\nexport function getProps(props, element) {\r\n    let data = {};\r\n    for (let i = 0; i < props.length; i++) {\r\n        let prop = props[i],\r\n            value =\r\n                element instanceof HTMLElement\r\n                    ? element.getAttribute(prop)\r\n                    : element[prop];\r\n        data[\r\n            prop.replace(/-+([\\w])/g, (all, letter) => letter.toUpperCase())\r\n        ] = /^json-/.test(prop) ? JSON.parse(value) : value;\r\n    }\r\n    return data;\r\n}\r\n","export function remove(parent, child) {\r\n    parent.removeChild(child);\r\n}\r\n\r\nexport function append(parent, child) {\r\n    parent.appendChild(child);\r\n}\r\n\r\nexport function replace(parent, newChild, oldChild) {\r\n    parent.replaceChild(newChild, oldChild);\r\n}\r\n\r\nexport function createText() {\r\n    return document.createTextNode(\"\");\r\n}\r\n\r\nexport function createElement(tag, svg) {\r\n    return svg\r\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        : document.createElement(tag);\r\n}\r\n","/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n * @return {VDom}\r\n */\r\nexport function h(tag, props, ...children) {\r\n    return new VDom(tag, props, concat(children));\r\n}\r\n/**\r\n * Create an instance of a virtual node\r\n * @param {*} tag - be social to the tagName\r\n * @param {*} props - is associated with the attributes of the tag\r\n * @param  {...*} children - the children associated with the tag\r\n */\r\nexport function VDom(tag, props, children) {\r\n    this.tag = tag;\r\n    this.props = props || {};\r\n    this.children = children || [];\r\n}\r\n/**\r\n *\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isVDom(value) {\r\n    return typeof value === \"object\" && value instanceof VDom;\r\n}\r\n/**\r\n * prepares the children associated with virtual dom, managing to simplify the algorithm of diff\r\n * @param {*} children - list of children associated with the virtual dom\r\n * @param {*} merge - array that concatenates all the children independent of the depth of the array\r\n * @return {Array}\r\n */\r\nexport function concat(children, merge = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        Array.isArray(child)\r\n            ? concat(child, merge)\r\n            : merge.push(isVDom(child) ? child : new VDom(\"\", {}, child || \"\"));\r\n    }\r\n    return merge;\r\n}\r\n","import { remove, append, replace, createText, createElement } from \"./dom\";\r\nimport { VDom, h } from \"./vdom\";\r\n/**\r\n * compares the attributes associated with the 2 render states\r\n * @param {HTMLELement} node\r\n * @param {Object} prev\r\n * @param {Object} next\r\n * @param {Boolean} svg\r\n */\r\nexport function diffProps(node, prev, next, svg) {\r\n    // generates a list of the existing attributes in both versions\r\n    let keys = Object.keys(prev).concat(Object.keys(next));\r\n    for (let i = 0; i < keys.length; i++) {\r\n        let prop = keys[i];\r\n        if (prev[prop] !== next[prop]) {\r\n            if (\r\n                typeof next[prop] === \"function\" ||\r\n                typeof prev[prop] === \"function\"\r\n            ) {\r\n                node[props.toLowerCase()] = next[prop] || null;\r\n            } else if (prop in next) {\r\n                if ((prop in node && !svg) || (svg && prop === \"style\")) {\r\n                    if (prop === \"style\") {\r\n                        if (typeof next[prop] === \"object\") {\r\n                            for (let index in next[prop]) {\r\n                                node.style[index] = next[prop][index];\r\n                            }\r\n                        } else {\r\n                            node.style.cssText = next[prop];\r\n                        }\r\n                    } else {\r\n                        node[prop] = next[prop];\r\n                    }\r\n                } else {\r\n                    svg\r\n                        ? node.setAttributeNS(null, prop, next[prop])\r\n                        : node.setAttribute(prop, next[prop]);\r\n                }\r\n            } else {\r\n                node.removeAttribute(prop);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * It allows to compare the 2 states of the render\r\n * @param {HTMLELement} parent - will receive the changes that the diff process determines\r\n * @param {Array} master - Previous state of the render\r\n * @param {Array} commit - Next render state\r\n * @param {Boolean} svg\r\n */\r\nexport function diff(parent, master, commit, svg) {\r\n    let children = parent.childNodes || [],\r\n        length = Math.max(master.length, commit.length);\r\n    for (let i = 0; i < length; i++) {\r\n        let prev = master[i] || new VDom(),\r\n            next = commit[i],\r\n            node = children[i];\r\n\r\n        if (next) {\r\n            let cursor = node;\r\n            svg = svg || next.tag === \"svg\";\r\n            if (prev.tag !== next.tag) {\r\n                if (next.tag) {\r\n                    cursor = createElement(next.tag, svg);\r\n                    if (node) {\r\n                        replace(parent, cursor, node);\r\n                        while (node.firstChild) {\r\n                            cursor.appendChild(node.firstChild);\r\n                        }\r\n                    } else {\r\n                        append(parent, cursor);\r\n                    }\r\n                } else {\r\n                    cursor = createText();\r\n                    if (prev.tag) {\r\n                        replace(parent, cursor, node);\r\n                    } else {\r\n                        append(parent, cursor);\r\n                    }\r\n                }\r\n            }\r\n            if (cursor.nodeName === \"#text\") {\r\n                if (prev.children !== next.children)\r\n                    cursor.textContent = next.children;\r\n            } else {\r\n                diffProps(cursor, prev.props, next.props, svg);\r\n                if (cursor) {\r\n                    diff(cursor, prev.children, next.children, svg);\r\n                }\r\n            }\r\n        } else {\r\n            if (node) remove(parent, node);\r\n        }\r\n    }\r\n}\r\n","import { getMethods, getEvents, getProps } from \"./utils\";\r\nimport { diff } from \"./vdom/diff\";\r\nimport { concat, h } from \"./vdom/vdom\";\r\n\r\nexport class Component {\r\n    constructor(root) {\r\n        this.root = root;\r\n        this.props = {};\r\n        this.state = {};\r\n        let _prev = [];\r\n        this.setState = (state = {}) => {\r\n            this.state = { ...this.state, ...state };\r\n            let render = concat([this.render()]);\r\n            diff(this.root, _prev, render);\r\n            _prev = render;\r\n        };\r\n    }\r\n    onMount() {}\r\n    onUpdate() {}\r\n    onUnmount() {}\r\n    onRender(event) {\r\n        this.setState();\r\n    }\r\n    render() {}\r\n}\r\n\r\nexport function register(tagName, Root) {\r\n    let _props = Root.props || [],\r\n        _events = getEvents(Root);\r\n    customElements.define(\r\n        tagName,\r\n        class extends HTMLElement {\r\n            constructor() {\r\n                super();\r\n                this.autorun();\r\n                this.root = new Root(this);\r\n            }\r\n            static get observedAttributes() {\r\n                return _props;\r\n            }\r\n            autorun() {\r\n                _events.forEach(({ type, method }) => {\r\n                    this.addEventListener(\r\n                        type,\r\n                        event => {\r\n                            this.root[method](event);\r\n                            if (event.defaultPrevented) return;\r\n                            if (type === \"update\") {\r\n                                this.root.props = {\r\n                                    ...this.root.props,\r\n                                    ...event.detail\r\n                                };\r\n                            }\r\n                            if (!/^(render|unmount)$/.test(type))\r\n                                this.dispatch(\"render\");\r\n                        },\r\n                        true\r\n                    );\r\n                });\r\n            }\r\n            connectedCallback() {\r\n                this.dispatch(\"mount\");\r\n            }\r\n            disconnectedCallback() {\r\n                this.dispatch(\"unmount\");\r\n            }\r\n            attributeChangedCallback(index, prev, next) {\r\n                this.dispatch(\"update\", getProps(_props, { [index]: next }));\r\n            }\r\n            dispatch(type, detail) {\r\n                this.dispatchEvent(\r\n                    new CustomEvent(type, {\r\n                        cancelable: true,\r\n                        detail\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    );\r\n}\r\n"],"names":["getEvents","Root","let","regExp","methods","proto","keys","concat","Object","getOwnPropertyNames","getPrototypeOf","getMethods","prototype","events","i","length","method","indexOf","test","push","type","replace","all","letter","toLowerCase","remove","parent","child","removeChild","append","appendChild","newChild","oldChild","replaceChild","createElement","tag","svg","document","createElementNS","VDom","props","children","this","merge","Array","isArray","value","diffProps","node","prev","next","prop","index","style","cssText","setAttributeNS","setAttribute","removeAttribute","[object Object]","root","state","_prev","setState","render","diff","master","commit","childNodes","Math","max","cursor","firstChild","createTextNode","nodeName","textContent","event","tagName","_props","_events","customElements","define","HTMLElement","super","autorun","observedAttributes","forEach","ref","addEventListener","defaultPrevented","detail","dispatch","element","data","getAttribute","toUpperCase","JSON","parse","getProps","dispatchEvent","CustomEvent","cancelable"],"mappings":"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"}